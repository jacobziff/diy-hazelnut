// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.8.1

//# unitInfo: Provides: Weak_array
//# unitInfo: Requires: Core, Core__Array, Core__Heap_block, Core__Option, Expect_test_collector, Ppx_bench_lib__Benchmark_accumulator, Ppx_inline_test_lib__Runtime, Ppx_module_timer_runtime, Stdlib__Weak
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Weak_array = "Weak_array",
    cst_weak_array = "weak_array";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Stdlib_Weak = global_data.Stdlib__Weak,
    Core_Heap_block = global_data.Core__Heap_block,
    Core = global_data.Core,
    Core_Array = global_data.Core__Array,
    Core_Option = global_data.Core__Option,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Expect_test_collector = global_data.Expect_test_collector,
    Ppx_inline_test_lib_Runtime = global_data.Ppx_inline_test_lib__Runtime;
   caml_call1(Ppx_module_timer_runtime[4], cst_Weak_array);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_weak_array);
   caml_call1(Expect_test_collector[5][1], "weak_array/src/weak_array.ml");
   caml_call2(Ppx_inline_test_lib_Runtime[2], cst_weak_array, cst);
   function create(len){return caml_call1(Stdlib_Weak[1], len);}
   function length(t){return caml_call1(Stdlib_Weak[2], t);}
   var set = Stdlib_Weak[3];
   function set_exn(t, i, x){
    return caml_call3
            (set, t, i, caml_call2(Core_Option[29], x, Core_Heap_block[3]));
   }
   var get = Stdlib_Weak[4];
   function is_some(t, i){return caml_call2(Stdlib_Weak[6], t, i);}
   function is_none(t, i){return 1 - is_some(t, i);}
   function sexp_of_t(sexp_of_a, t){
    var
     _g_ = length(t),
     x_001 =
       caml_call2
        (Core_Array[40], _g_, function(i){return caml_call2(get, t, i);}),
     _h_ = caml_call1(Core_Heap_block[1], sexp_of_a),
     _i_ = caml_call1(Core[454], _h_);
    return caml_call2(Core[288], _i_, x_001);
   }
   function iter(t, f){
    var _e_ = length(t) - 1 | 0, _d_ = 0;
    if(_e_ >= 0){
     var i = _d_;
     for(;;){
      var match = caml_call2(get, t, i);
      if(match){
       var v = match[1];
       caml_call1(f, caml_call1(Core_Heap_block[4], v));
      }
      var _f_ = i + 1 | 0;
      if(_e_ === i) break;
      i = _f_;
     }
    }
    return 0;
   }
   function iteri(t, f){
    var _b_ = length(t) - 1 | 0, _a_ = 0;
    if(_b_ >= 0){
     var i = _a_;
     for(;;){
      var match = caml_call2(get, t, i);
      if(match){
       var v = match[1];
       caml_call2(f, i, caml_call1(Core_Heap_block[4], v));
      }
      var _c_ = i + 1 | 0;
      if(_b_ === i) break;
      i = _c_;
     }
    }
    return 0;
   }
   function blit(src, src_pos, dst, dst_pos, len){
    return caml_call5(Stdlib_Weak[8], src, src_pos, dst, dst_pos, len);
   }
   caml_call1(Ppx_inline_test_lib_Runtime[3], cst_weak_array);
   caml_call1(Expect_test_collector[5][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Weak_array);
   var
    Weak_array =
      [0,
       sexp_of_t,
       create,
       length,
       set,
       set_exn,
       get,
       is_some,
       is_none,
       iter,
       iteri,
       blit];
   runtime.caml_register_global(16, Weak_array, cst_Weak_array);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJ3ZWFrX2FycmF5LmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJjcmVhdGUiLCJsZW4iLCJsZW5ndGgiLCJ0Iiwic2V0Iiwic2V0X2V4biIsImkiLCJ4IiwiZ2V0IiwiaXNfc29tZSIsImlzX25vbmUiLCJzZXhwX29mX3QiLCJzZXhwX29mX2EiLCJ4XzAwMSIsIml0ZXIiLCJmIiwidiIsIml0ZXJpIiwiYmxpdCIsInNyYyIsInNyY19wb3MiLCJkc3QiLCJkc3RfcG9zIl0sInNvdXJjZXMiOlsiL1VzZXJzL2phY29iemlmZi8ub3BhbS9kaXktaGF6ZWxudXQvbGliL2NvcmVfa2VybmVsL3dlYWtfYXJyYXkvd2Vha19hcnJheS5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFNSUEsT0FBUUMsS0FBTSxPQUFBLDJCQUFOQSxLQUFxQjtZQUM3QkMsT0FBT0MsR0FBSSxPQUFBLDJCQUFKQSxHQUFpQjtPQUN4QkM7WUFFQUMsUUFBUUYsR0FBRUcsR0FBRUM7SUFBSSxPQUFRO2FBRnhCSCxLQUVRRCxHQUFFRyxHQUFjLDRCQUFaQztHQUFtRDtPQUUvREM7WUFDQUMsUUFBUU4sR0FBRUcsR0FBSSxPQUFBLDJCQUFOSCxHQUFFRyxHQUFrQjtZQUM1QkksUUFBUVAsR0FBRUcsR0FBSSxXQURkRyxRQUNRTixHQUFFRyxHQUFxQjtZQUUvQkssVUFBVUMsV0FBVVQ7SUFBSTtLQURBLE1BUnhCRCxPQVNvQkM7S0FBZVU7T0FERzt1Q0FBS1AsR0FBSyxPQUFBLFdBSGhERSxLQUlvQkwsR0FEdUJHLEdBQVk7MENBQzdDTTs7c0NBQXlCQztHQUF5QztZQUU1RUMsS0FBS1gsR0FBR1k7SUFDVixJQUFhLE1BWlhiLE9BV0tDLFlBQ1A7O1NBQUFHOztNQUNRLFlBQUEsV0FSTkUsS0FNS0wsR0FDUEc7O1dBR1NVO09BQUssV0FKSkQsR0FJTSwrQkFBUEM7O01BSFQsVUFBQVY7aUJBQUFBO01BQUFBOzs7O0dBSUk7WUFFRlcsTUFBTWQsR0FBR1k7SUFDWCxJQUFhLE1BbkJYYixPQWtCTUMsWUFDUjs7U0FBQUc7O01BQ1EsWUFBQSxXQWZORSxLQWFNTCxHQUNSRzs7V0FHU1U7T0FBSyxXQUpIRCxHQUNYVCxHQUdrQiwrQkFBVFU7O01BSFQsVUFBQVY7aUJBQUFBO01BQUFBOzs7O0dBSUk7WUFFRlksS0FBTUMsS0FBS0MsU0FBU0MsS0FBS0MsU0FBU3JCO0lBQ3BDLE9BQUEsMkJBRFFrQixLQUFLQyxTQUFTQyxLQUFLQyxTQUFTckI7R0FDQzs7Ozs7Ozs7T0FqQm5DVTtPQVZBWDtPQUNBRTtPQUNBRTtPQUVBQztPQUVBRztPQUNBQztPQUNBQztPQUlBSTtPQU9BRztPQU9BQzs7O0UiLCJzb3VyY2VzQ29udGVudCI6WyJvcGVuISBDb3JlXG5cbm1vZHVsZSBXZWFrID0gQ2FtbC5XZWFrXG5cbnR5cGUgJ2EgdCA9ICdhIEhlYXBfYmxvY2sudCBXZWFrLnRcblxubGV0IGNyZWF0ZSB+bGVuID0gV2Vhay5jcmVhdGUgbGVuXG5sZXQgbGVuZ3RoIHQgPSBXZWFrLmxlbmd0aCB0XG5sZXQgc2V0ID0gV2Vhay5zZXRcblxubGV0IHNldF9leG4gdCBpIHggPSBzZXQgdCBpIChPcHRpb24ubWFwIHggfmY6SGVhcF9ibG9jay5jcmVhdGVfZXhuKVxuXG5sZXQgZ2V0ID0gV2Vhay5nZXRcbmxldCBpc19zb21lIHQgaSA9IFdlYWsuY2hlY2sgdCBpXG5sZXQgaXNfbm9uZSB0IGkgPSBub3QgKGlzX3NvbWUgdCBpKVxubGV0IHRvX2FycmF5IHQgPSBBcnJheS5pbml0IChsZW5ndGggdCkgfmY6KGZ1biBpIC0+IGdldCB0IGkpXG5sZXQgc2V4cF9vZl90IHNleHBfb2ZfYSB0ID0gWyVzZXhwX29mOiBhIEhlYXBfYmxvY2sudCBvcHRpb24gYXJyYXldICh0b19hcnJheSB0KVxuXG5sZXQgaXRlciB0IH5mID1cbiAgZm9yIGkgPSAwIHRvIGxlbmd0aCB0IC0gMSBkb1xuICAgIG1hdGNoIGdldCB0IGkgd2l0aFxuICAgIHwgTm9uZSAtPiAoKVxuICAgIHwgU29tZSB2IC0+IGYgKEhlYXBfYmxvY2sudmFsdWUgdilcbiAgZG9uZVxuXG5sZXQgaXRlcmkgdCB+ZiA9XG4gIGZvciBpID0gMCB0byBsZW5ndGggdCAtIDEgZG9cbiAgICBtYXRjaCBnZXQgdCBpIHdpdGhcbiAgICB8IE5vbmUgLT4gKClcbiAgICB8IFNvbWUgdiAtPiBmIGkgKEhlYXBfYmxvY2sudmFsdWUgdilcbiAgZG9uZVxuXG5sZXQgYmxpdCB+c3JjIH5zcmNfcG9zIH5kc3QgfmRzdF9wb3MgfmxlbiA9XG4gIFdlYWsuYmxpdCBzcmMgc3JjX3BvcyBkc3QgZHN0X3BvcyBsZW5cbiJdfQ==
